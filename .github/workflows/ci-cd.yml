name: CI/CD

on:
  push:
    branches:
      - "main"

jobs:
  push_docker_images_dockerhub:
    name: "Build and push docker images to Docker Hub"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push notifications-service docker image
        run: |
          cd notifications-service
          docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/notifications-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/notifications-service:latest

      - name: Build and push warehouse-service docker image
        run: |
          cd warehouse-service
          docker build . -t ${{ secrets.DOCKERHUB_USERNAME }}/warehouse-service:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/warehouse-service:latest

  push_docker_images_yandex_cloud:
    name: "Build and push docker images to YC Registry"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to YC Registry
        uses: docker/login-action@v3
        with:
          registry: cr.yandex
          username: json_key
          password: ${{ secrets.YC_KEYS }}

      - name: Build and push notifications-service docker image
        run: |
          cd notifications-service
          docker build . -t cr.yandex/${{secrets.YC_REGISTRY_ID }}/${{ secrets.MY_SURNAME }}-notifications-service:latest
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/${{ secrets.MY_SURNAME }}-notifications-service:latest

      - name: Build and push warehouse-service docker image
        run: |
          cd warehouse-service
          docker build . -t cr.yandex/${{secrets.YC_REGISTRY_ID }}/${{ secrets.MY_SURNAME }}-warehouse-service:latest
          docker push cr.yandex/${{ secrets.YC_REGISTRY_ID }}/${{ secrets.MY_SURNAME }}-warehouse-service:latest

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: push_docker_images_yandex_cloud
    steps:
      - name: Deploy serverless container
        uses: yc-actions/yc-sls-container-deploy@v1
        with:
          yc-sa-json-credentials: ${{ secrets.YC_KEYS }}
          container-name: ${{ secrets.YC_CONTAINER_NAME }}
          folder-id: ${{ secrets.YC_FOLDER_ID }}
          revision-image-url: cr.yandex/${{ secrets.YC_REGISTRY_ID }}/${{ secrets.MY_SURNAME }}-notifications-service:latest
          revision-service-account-id: ${{ secrets.YC_SA_ID }}
          revision-env: |
            RABBITMQ_URL=${{ secrets.RABBITMQ_URL }}
